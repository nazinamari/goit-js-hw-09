{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAIP,MAAMQ,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAEzB,SAAuBC,GACrBA,EAAGC,iBACH,MAAMC,EAAaC,SAASP,EAAQQ,SAAShB,MAAMiB,OAC7CC,EAAYH,SAASP,EAAQQ,SAASG,KAAKF,OAC3CG,EAAcL,SAASP,EAAQQ,SAASK,OAAOJ,QAMvD,SAAwBK,EAAOH,EAAME,GACnC,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAQE,IAC1BzB,EAAcyB,EAAI,EAAGD,EAAQH,EAAOI,GACjCC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,WAXxD6B,CAAef,EAAYI,EAAWE,GACtCZ,EAAQsB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit (el) {\n  el.preventDefault();\n  const delayValue = parseInt(formRef.elements.delay.value);\n  const stepValue = parseInt(formRef.elements.step.value);\n  const amountValue = parseInt(formRef.elements.amount.value);\n\n  createPromises(delayValue, stepValue, amountValue);\n  formRef.reset();\n};\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$formRef","document","querySelector","addEventListener","el","preventDefault","delayValue","parseInt","elements","value","stepValue","step","amountValue","amount","delay1","i","then","Notify","success","catch","failure","$47d4ff9957288465$var$createPromises","reset"],"version":3,"file":"03-promises.44c8dd46.js.map"}